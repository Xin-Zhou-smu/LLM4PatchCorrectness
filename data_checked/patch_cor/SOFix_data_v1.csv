,project,label,content,tool,bug_id,filename,project_with_label,all_paths
559,Math,1,} k = 1.0 / k; tmp = mu + k * sigma; -            if (tmp < upper) { +            if (tmp > upper) { upper = ((int) Math.ceil(tmp)) - 1; } },SOFix,2,patch2-Math-2-SOFix-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/SOFix/Math/patch2-Math-2-SOFix-plausible.patch
1156,Lang,0,(str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's'); } +                return false; } case 4: { char ch = str.charAt(0);,SOFix,51,patch1-Lang-51-SOFix.patch,Lang-correct,patches_remove_inconsistent/correct/SOFix/Lang/patch1-Lang-51-SOFix.patch
1157,Lang,0,"//          // contract with translators is that they have to understand codepoints //          // and they just took care of a surrogate pair for (int pt = 0; pt < consumed; pt++) { -                pos += Character.charCount(Character.codePointAt(input, pos)); +                pos += Character.charCount(Character.codePointAt(input, pt)); } } }",SOFix,6,patch1-Lang-6-SOFix.patch,Lang-correct,patches_remove_inconsistent/correct/SOFix/Lang/patch1-Lang-6-SOFix.patch
1158,Chart,0,DatasetUtilities.findRangeBounds(d)); } } - +                if (r != null) { Collection c = r.getAnnotations(); Iterator i = c.iterator(); while (i.hasNext()) { } } } +        }  Iterator it = includedAnnotations.iterator(); while (it.hasNext()) {,SOFix,4,patch1-Chart-4-SOFix.patch,Chart-correct,patches_remove_inconsistent/correct/SOFix/Chart/patch1-Chart-4-SOFix.patch
1159,Chart,0,"} if (plotState != null && hotspot != null) { ChartRenderingInfo owner = plotState.getOwner(); +            if (owner != null) { EntityCollection entities = owner.getEntityCollection(); if (entities != null) { entities.add(new AxisLabelEntity(this, hotspot, this.labelToolTip, this.labelURL)); } +            } } return state; ",SOFix,26,patch1-Chart-26-SOFix.patch,Chart-correct,patches_remove_inconsistent/correct/SOFix/Chart/patch1-Chart-26-SOFix.patch
1160,Chart,0,"public Paint getPaint(double value) { double v = Math.max(value, this.lowerBound); v = Math.min(v, this.upperBound); -        int g = (int) ((value - this.lowerBound) / (this.upperBound +        int g = (int) (((v) - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0); return new Color(g, g, g); }",SOFix,24,patch1-Chart-24-SOFix.patch,Chart-correct,patches_remove_inconsistent/correct/SOFix/Chart/patch1-Chart-24-SOFix.patch
1161,Math,0,"} while ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)));  -        if (fa * fb >= 0.0 ) { +        if ((fa * fb) > 0.0 ) { throw new ConvergenceException( ""number of iterations={0}, maximum iterations={1}, "" + ""initial={2}, lower bound={3}, upper bound={4}, final a value={5}, "" +",SOFix,85,patch1-Math-85-SOFix.patch,Math-correct,patches_remove_inconsistent/correct/SOFix/Math/patch1-Math-85-SOFix.patch
1162,Math,0,"/** {@inheritDoc} */ public double solve(final UnivariateRealFunction f, double min, double max, double initial) throws MaxIterationsExceededException, FunctionEvaluationException { -        return solve(min, max); +        return solve(f,min, max) +; }  /** {@inheritDoc} */",SOFix,70,patch1-Math-70-SOFix.patch,Math-correct,patches_remove_inconsistent/correct/SOFix/Math/patch1-Math-70-SOFix.patch
1163,Math,0,"private boolean flipIfWarranted(final int n, final int step) { if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) { // flip array -            int j = 4 * n - 1; +            int j = 4 * (n - 1); for (int i = 0; i < j; i += 4) { for (int k = 0; k < 4; k += step) { final double tmp = work[i + k];",SOFix,80,patch1-Math-80-SOFix.patch,Math-correct,patches_remove_inconsistent/correct/SOFix/Math/patch1-Math-80-SOFix.patch
1164,Math,0,"// positive cost non-artificial variables for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) { final double entry = tableau.getEntry(0, i); -            if (Precision.compareTo(entry, 0d, maxUlps) > 0) { +            if (Precision.compareTo(entry, 0.0, epsilon) > 0) { columnsToDrop.add(i); } }",SOFix,33,patch1-Math-33-SOFix.patch,Math-correct,patches_remove_inconsistent/correct/SOFix/Math/patch1-Math-33-SOFix.patch
1165,Math,0,"break; case REGULA_FALSI: // Nothing. -                    if (x == x1) { -                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol)); -                        f0 = computeObjectiveValue(x0); -                    } + break; default: // Should never happen.",SOFix,50,patch1-Math-50-SOFix.patch,Math-correct,patches_remove_inconsistent/correct/SOFix/Math/patch1-Math-50-SOFix.patch
