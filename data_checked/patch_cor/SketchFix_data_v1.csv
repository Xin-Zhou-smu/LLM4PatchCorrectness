,project,label,content,tool,bug_id,filename,project_with_label,all_paths
257,Chart,1,int index = this.plot.getIndexOf(this); CategoryDataset dataset = this.plot.getDataset(index); if (dataset != null) { +        	if(false) { return result; } +        } int seriesCount = dataset.getRowCount(); if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) { for (int i = 0; i < seriesCount; i++) {,SketchFix,1,patch2-Chart-1-SketchFix-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch
258,Chart,1,} int index = this.plot.getIndexOf(this); CategoryDataset dataset = this.plot.getDataset(index); -        if (dataset != null) { +        if (dataset != null&&baseToolTipGenerator != legendItemToolTipGenerator) { return result; } int seriesCount = dataset.getRowCount();,SketchFix,1,patch1-Chart-1-SketchFix-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch
259,Math,1,"for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) { final double rhs = tableau.getEntry(i, tableau.getWidth() - 1); final double entry = tableau.getEntry(i, col); -            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) { +            if (MathUtils.compareTo(entry, 0, entry) >= 0) { final double ratio = rhs / entry; if (ratio < minRatio) { minRatio = ratio;",SketchFix,82,patch1-Math-82-SketchFix-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/SketchFix/Math/patch1-Math-82-SketchFix-plausible.patch
260,Math,1,"/** {@inheritDoc} */ public double solve(final UnivariateRealFunction f, double min, double max, double initial) throws MaxIterationsExceededException, FunctionEvaluationException { -        return solve(min, max); +        return solve(f, min, max); }  /** {@inheritDoc} */ fmin = f.value(min); fm = f.value(m);  -            if (fm * fmin > 0.0) { +            if (fm * fmin > 0.0||i<0) { // max and m bracket the root. min = m; } else {",SketchFix,70,patch1-Math-70-SketchFix-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/SketchFix/Math/patch1-Math-70-SketchFix-plausible.patch
261,Math,1,"if (Precision.compareTo(entry, 0d, maxUlps) > 0) { final double ratio = rhs / entry; final int cmp = Precision.compareTo(ratio, minRatio, maxUlps); +                if(rhs != minRatio) { if (cmp == 0) { minRatioPositions.add(i); } else if (cmp < 0) { } } } +        }  if (minRatioPositions.size() == 0) { return null;",SketchFix,33,patch1-Math-33-SketchFix-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/SketchFix/Math/patch1-Math-33-SketchFix-plausible.patch
262,Math,1,"final double entry = tableau.getEntry(i, col); if (MathUtils.compareTo(entry, 0, epsilon) >= 0) { final double ratio = rhs / entry; -                if (ratio < minRatio) { +                if (ratio < minRatio&&ratio>=0) { minRatio = ratio; minRatioPos = i; }",SketchFix,82,patch2-Math-82-SketchFix-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/SketchFix/Math/patch2-Math-82-SketchFix-plausible.patch
263,Math,1,"/** {@inheritDoc} */ public double solve(final UnivariateRealFunction f, double min, double max, double initial) throws MaxIterationsExceededException, FunctionEvaluationException { -        return solve(min, max); +        return solve(f, min, max); }  /** {@inheritDoc} */ fmin = f.value(min); fm = f.value(m);  -            if (fm * fmin > 0.0) { +            if (fm * fmin > 0.0||fmin == fm) { // max and m bracket the root. min = m; } else {",SketchFix,70,patch2-Math-70-SketchFix-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/SketchFix/Math/patch2-Math-70-SketchFix-plausible.patch
730,Closure,0,"* can cause problems if it changes the completion type of the finally * block. See ECMA 262 Sections 8.9 & 12.14 */ -      if (NodeUtil.hasFinally(n)) { +      if (NodeUtil.hasFinally(n)&&allCatchNodes == tryBlock) { Node finallyBlock = n.getLastChild(); tryMinimizeExits(finallyBlock, exitType, labelName); }",SketchFix,126,patch1-Closure-126-SketchFix.patch,Closure-correct,patches_remove_inconsistent/correct/SketchFix/Closure/patch1-Closure-126-SketchFix.patch
731,Chart,0,endIndex = -(endIndex + 1); // this is first item AFTER end period endIndex = endIndex - 1;    // so this is last item BEFORE end } -        if (endIndex < 0) { +        if (endIndex < 0 || (endIndex < startIndex)) { emptyRange = true; } if (emptyRange) {,SketchFix,9,patch1-Chart-9-SketchFix.patch,Chart-correct,patches_remove_inconsistent/correct/SketchFix/Chart/patch1-Chart-9-SketchFix.patch
732,Chart,0,return false; } PathIterator iterator1 = p1.getPathIterator(null); -        PathIterator iterator2 = p1.getPathIterator(null); +        PathIterator iterator2 = p2.getPathIterator(null); double[] d1 = new double[6]; double[] d2 = new double[6]; boolean done = iterator1.isDone() && iterator2.isDone();,SketchFix,11,patch1-Chart-11-SketchFix.patch,Chart-correct,patches_remove_inconsistent/correct/SketchFix/Chart/patch1-Chart-11-SketchFix.patch
733,Chart,0,"*/ public Week(Date time, TimeZone zone) { // defer argument checking... -        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault()); +       this(time, zone, Locale.getDefault()); }  /** ",SketchFix,8,patch1-Chart-8-SketchFix.patch,Chart-correct,patches_remove_inconsistent/correct/SketchFix/Chart/patch1-Chart-8-SketchFix.patch
734,Math,0,"break; case REGULA_FALSI: // Nothing. -                    if (x == x1) { -                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol)); -                        f0 = computeObjectiveValue(x0); -                    } break; default: // Should never happen.",SketchFix,50,patch1-Math-50-SketchFix.patch,Math-correct,patches_remove_inconsistent/correct/SketchFix/Math/patch1-Math-50-SketchFix.patch
