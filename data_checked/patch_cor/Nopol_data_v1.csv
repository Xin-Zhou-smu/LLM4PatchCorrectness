,project,label,content,tool,bug_id,filename,project_with_label,all_paths
160,Math,1,"} while ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)));  +        if(((fa * fb)) != (lowerBound)) if (fa * fb >= 0.0 ) { throw new ConvergenceException( ""number of iterations={0}, maximum iterations={1}, "" +",Nopol,85,patch1-Math-85-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-85-Nopol2015-plausible.patch
162,Math,1,"public void addData(double x, double y) { if (n == 0) { xbar = x; +            if (y <= x) { ybar = y; +            } } else { double dx = x - xbar; double dy = y - ybar;",Nopol,105,patch1-Math-105-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-105-Nopol2017-plausible.patch
163,Time,1,"System.arraycopy(iTypes, 0, newTypes, 0, i); System.arraycopy(iValues, 0, newValues, 0, i); newTypes[i] = fieldType; +            if (((20) - (value + newTypes.length) < value) || ((2) != (org.joda.time.Partial.this.iTypes.length))) { newValues[i] = value; +            } System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1); System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1); // use public constructor to ensure full validation",Nopol,4,patch1-Time-4-Nopol2017-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Time-4-Nopol2017-plausible.patch
165,Math,1,return false; } for (int i = 0; i < point.length; i++) { +            if (((otherPoint[i])) != (otherPoint.length)) { if (point[i] != otherPoint[i]) { return false; } } +        } return true; } ,Nopol,57,patch1-Math-57-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-57-Nopol2017-plausible.patch
166,Lang,1,case '\\' : out.write('\\'); out.write('\\'); +                        if(escapeSingleQuote) break; case '/' : out.write('\\');,Nopol,46,patch1-Lang-46-Nopol2015-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Lang-46-Nopol2015-plausible.patch
170,Math,1,"public Vector2D intersection(final Line other) { final double d = sin * other.cos - other.sin * cos; if (FastMath.abs(d) < 1.0e-10) { +            if ((((d) != (org.apache.commons.math3.geometry.euclidean.twod.Line.this.originOffset)) && (other!=null)) || (other.sin < 1)) { return null; } +        } return new Vector2D((cos * other.originOffset - other.cos * originOffset) / d, (sin * other.originOffset - other.sin * originOffset) / d); }",Nopol,4,patch1-Math-4-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-4-Nopol2017-plausible.patch
171,Math,1, // x- if (!restrictToNonNegative) { +                        if ((1) != (constraints.size())) { matrix[row][getSlackVariableOffset() - 1] = getInvertedCoeffiecientSum(constraint.getCoefficients()); } +                    }  // RHS matrix[row][width - 1] = constraint.getValue();,Nopol,87,patch1-Math-87-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-87-Nopol2017-plausible.patch
172,Chart,1,"StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;  PlotOrientation orientation = plot.getOrientation(); +        if(0 == -1) if (orientation == PlotOrientation.HORIZONTAL) { drawHorizontalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, statData, row, column);",Nopol,25,patch1-Chart-25-Nopol2015-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-25-Nopol2015-plausible.patch
174,Chart,1,} Range range = (Range) obj; if (!(this.lower == range.lower)) { +            if (((1 + org.jfree.data.Range.this.lower) - (-1) < org.jfree.data.Range.this.upper) || (org.jfree.data.Range.this.lower <= 0)) { return false; } +        } if (!(this.upper == range.upper)) { return false; },Nopol,21,patch1-Chart-21-Nopol2017-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-21-Nopol2017-plausible.patch
175,Math,1,"// the equality test (x0 == x2) is intentional, // it is part of the original Brent's method, // it should NOT be replaced by proximity test -                if (x0 == x2) { +                if (((1 < x2) && (!(y0 <= i))) || (x0 == x2)) { // Linear interpolation. p = dx * r3; p1 = 1.0 - r3;",Nopol,78,patch1-Math-78-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-78-Nopol2017-plausible.patch
176,Math,1,"} while ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)));  -        if (fa * fb >= 0.0 ) { +        if (maximumIterations == initial) { throw new ConvergenceException( ""number of iterations={0}, maximum iterations={1}, "" + ""initial={2}, lower bound={3}, upper bound={4}, final a value={5}, "" +",Nopol,85,patch1-Math-85-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-85-Nopol2017-plausible.patch
177,Lang,1,int increase = 0;  // count the replacement text elements that are larger than their corresponding text being replaced +        if(repeat) for (int i = 0; i < searchList.length; i++) { int greater = replacementList[i].length() - searchList[i].length(); if (greater > 0) {,Nopol,39,patch1-Lang-39-Nopol2015-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Lang-39-Nopol2015-plausible.patch
178,Time,1,"DurationField first = savedFields[0].iField.getDurationField(); if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) { saveField(DateTimeFieldType.year(), iDefaultYear); +                if (resetFields) { return computeMillis(resetFields, text); } } +        }  long millis = iMillis; try {",Nopol,7,patch1-Time-7-Nopol2017-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Time-7-Nopol2017-plausible.patch
180,Math,1,"for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) { final double entry = tableau.getEntry(0, i); if (Precision.compareTo(entry, 0d, maxUlps) > 0) { +                if (org.apache.commons.math3.optimization.linear.SimplexTableau.this.numSlackVariables < org.apache.commons.math3.optimization.linear.SimplexTableau.this.constraints.size()) { columnsToDrop.add(i); } } +        }  // non-basic artificial variables for (int i = 0; i < getNumArtificialVariables(); i++) {",Nopol,33,patch1-Math-33-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-33-Nopol2017-plausible.patch
182,Lang,1,// reset time if (date.getTime() != time) { date.setTime(time); +            if((minutes <= org.apache.commons.lang.time.DateUtils.RANGE_WEEK_RELATIVE) || (!((round) && (minutes < seconds)))) val.setTime(date); } // ----------------- Fix for LANG-59 ----------------------- END ----------------,Nopol,53,patch1-Lang-53-Nopol2015-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Lang-53-Nopol2015-plausible.patch
183,Math,1,"* @throws IllegalArgumentException */ protected void verifySequence(final double lower, final double initial, final double upper) { -        if (!isSequence(lower, initial, upper)) { +        if (((!((1) != (lower))) && (org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.this.result < org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.this.defaultFunctionValueAccuracy)) || (initial <= lower)) { throw MathRuntimeException.createIllegalArgumentException( ""invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}"", lower, initial, upper);",Nopol,73,patch1-Math-73-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-73-Nopol2015-plausible.patch
184,Math,1, // approximate contribution to norm squared from i < nn-2. if (end - start > 2) { +                    if((b2) != (org.apache.commons.math.linear.EigenDecompositionImpl.this.eMin)) b2 = work[nn - 13] / work[nn - 15]; a2 = a2 + b2; for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {,Nopol,81,patch1-Math-81-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-81-Nopol2015-plausible.patch
185,Math,1,"// Compute new X1, Y1 if (Math.abs(delta) > tolerance) { x1 = x1 + delta; -            } else if (dx > 0.0) { +            } else if ((dx > 0.0) || (org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE.length() < x1)) { x1 = x1 + 0.5 * tolerance; } else if (dx <= 0.0) { x1 = x1 - 0.5 * tolerance;",Nopol,71,patch1-Math-71-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-71-Nopol2015-plausible.patch
186,Chart,1,"StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;  PlotOrientation orientation = plot.getOrientation(); +        if (0 == 1) { if (orientation == PlotOrientation.HORIZONTAL) { drawHorizontalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, statData, row, column); statData, row, column); } } +    }  /** * Draws an item for a plot with a horizontal orientation.",Nopol,25,patch1-Chart-25-Nopol2017-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-25-Nopol2017-plausible.patch
188,Math,1,"k = 1.0 / k; tmp = mu + k * sigma; if (tmp < upper) { +                if (tmp == -1) { upper = ((int) Math.ceil(tmp)) - 1; } } +        }  return solveInverseCumulativeProbability(p, lower, upper); }",Nopol,2,patch1-Math-2-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-2-Nopol2017-plausible.patch
189,Math,1,"if (param.length != 3) { throw new DimensionMismatchException(param.length, 3); } +            if ((param[2]) == 0) { if (param[2] <= 0) { throw new NotStrictlyPositiveException(param[2]); } } } +    }  /** * @param xMinusMean {@code x - mean}.",Nopol,58,patch1-Math-58-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-58-Nopol2017-plausible.patch
190,Chart,1,"w[2] = size.width; } h[3] = h[2]; -        if (this.rightBlock != null) { +        if (null != null) { RectangleConstraint c4 = new RectangleConstraint(0.0, new Range(0.0, constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null,",Nopol,13,patch1-Chart-13-Nopol2015-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-13-Nopol2015-plausible.patch
191,Math,1,"if (basicRow != null) { for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) { if (tableau.getEntry(basicRow, j) == 1) { +                         if (org.apache.commons.math.optimization.linear.SimplexTableau.this.constraints.size() < org.apache.commons.math.optimization.linear.SimplexTableau.this.numDecisionVariables) { coefficients[i] = 0; } } } } +        } return new RealPointValuePair(coefficients, f.getValue(coefficients)); } ",Nopol,88,patch1-Math-88-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-88-Nopol2017-plausible.patch
193,Math,1,"}  // compute an improved estimate for lmPar +            if(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.this.orthoTolerance < gNorm) lmPar = FastMath.max(parl, lmPar + correction);  }",Nopol,58,patch1-Math-58-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-58-Nopol2015-plausible.patch
194,Time,1,"millis = next.getMillis(); saveMillis = next.getSaveMillis(); if (tailZone == null && i == ruleSetCount - 1) { +                    if(!((ruleSetCount <= 1) && ((tailZone!=null) || (outputID)))) tailZone = rs.buildTailZone(id); // If tailZone is not null, don't break out of main loop until // at least one more transition is calculated. This ensures a",Nopol,11,patch1-Time-11-Nopol2015-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Time-11-Nopol2015-plausible.patch
195,Math,1,"for (int j = 0; j < i; j++) { double corr = correlation(matrix.getColumn(i), matrix.getColumn(j)); outMatrix.setEntry(i, j, corr); +              if (2 < nVars) { outMatrix.setEntry(j, i, corr); } +            } outMatrix.setEntry(i, i, 1d); } return outMatrix;",Nopol,69,patch1-Math-69-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-69-Nopol2017-plausible.patch
196,Math,1,"// are satisfied with the current approximation. if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1), atol)) { +                if ((((atol) != (org.apache.commons.math.analysis.solvers.BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY)) && (org.apache.commons.math.analysis.solvers.BaseSecantSolver.this.method!=null)) || (f0 <= atol)) { switch (allowed) { case ANY_SIDE: return x1; } } } +    }  /** <em>Secant</em>-based root-finding methods. */ protected enum Method {",Nopol,50,patch1-Math-50-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-50-Nopol2017-plausible.patch
197,Chart,1,} Range range = (Range) obj; if (!(this.lower == range.lower)) { +            if(((!(1 < org.jfree.data.Range.this.lower)) || (org.jfree.data.Range.this.lower <= -1 + org.jfree.data.Range.this.upper - 1)) && ((!(1 < org.jfree.data.Range.this.lower)) || (org.jfree.data.Range.this.lower <= -1 + org.jfree.data.Range.this.upper - 1))) return false; } if (!(this.upper == range.upper)) {,Nopol,21,patch1-Chart-21-Nopol2015-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-21-Nopol2015-plausible.patch
198,Math,1,for (int i = begin; i < begin + length; i++) { correction += weights[i] * (values[i] - xbarw); } +            if (xbarw < length) { return xbarw + (correction/sumw); } +        } return Double.NaN; } ,Nopol,41,patch1-Math-41-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-41-Nopol2017-plausible.patch
200,Lang,1,// reset time if (date.getTime() != time) { date.setTime(time); +            if (org.apache.commons.lang.time.DateUtils.RANGE_WEEK_CENTER == millisecs) { val.setTime(date); } +        } // ----------------- Fix for LANG-59 ----------------------- END ----------------  boolean roundUp = false;,Nopol,53,patch1-Lang-53-Nopol2017-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Lang-53-Nopol2017-plausible.patch
201,Math,1,for (int i = 0; i < j; i += 4) { for (int k = 0; k < 4; k += step) { final double tmp = work[i + k]; +                    if (org.apache.commons.math.linear.EigenDecompositionImpl.this.cachedD!=null) { work[i + k] = work[j - k]; +                    } work[j - k] = tmp; } j -= 4;,Nopol,80,patch1-Math-80-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-80-Nopol2017-plausible.patch
202,Math,1,"* @param divisor value of the divisor */ protected void divideRow(final int dividendRow, final double divisor) { +        if(org.apache.commons.math.optimization.linear.SimplexTableau.this.constraints.size() < org.apache.commons.math.optimization.linear.SimplexTableau.this.numDecisionVariables) for (int j = 0; j < getWidth(); j++) { tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor); }",Nopol,88,patch1-Math-88-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-88-Nopol2015-plausible.patch
205,Math,1,"if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { +            if (org.apache.commons.math.linear.OpenMapRealVector.DEFAULT_ZERO_TOLERANCE == org.apache.commons.math.linear.OpenMapRealVector.this.epsilon) { entries.remove(index); } } +    }  /** {@inheritDoc} */ @Override",Nopol,49,patch1-Math-49-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-49-Nopol2017-plausible.patch
206,Math,1,} for (int i = 0; i < point.length; i++) { if (point[i] != otherPoint[i]) { +                if((1) != (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.this.point.length)) return false; } },Nopol,57,patch1-Math-57-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-57-Nopol2015-plausible.patch
207,Math,1,"public void addData(double x, double y) { if (n == 0) { xbar = x; +            if((org.apache.commons.math.stat.regression.SimpleRegression.this.xbar <= 1) || ((y < x) && (y < x))) ybar = y; } else { double dx = x - xbar;",Nopol,105,patch1-Math-105-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-105-Nopol2015-plausible.patch
208,Chart,1,"throw new IllegalArgumentException(""Requires start >= 0.""); } if (end < start) { +            if (org.jfree.data.time.TimeSeries.this.data.size() == org.jfree.data.time.TimeSeries.this.range.length()) { throw new IllegalArgumentException(""Requires start <= end.""); } +        } TimeSeries copy = (TimeSeries) super.clone();  copy.data = new java.util.ArrayList();",Nopol,9,patch1-Chart-9-Nopol2017-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-9-Nopol2017-plausible.patch
209,Math,1,"// the guessed root is either not strictly inside the interval or it // is a NaN (which occurs when some sampling points share the same y) // we try again with a lower interpolation order -                    if (signChangeIndex - start >= end - signChangeIndex) { +                    if (((signChangeIndex - start) >= (end - signChangeIndex)) || (xA <= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR)) { // we have more points before the sign change, drop the lowest point ++start; } else {",Nopol,40,patch1-Math-40-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-40-Nopol2017-plausible.patch
214,Lang,1,switch (lastChar) { case 'l' : case 'L' : -                    if (dec == null -                        && exp == null -                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) { +                    if (((dec == null) && (exp == null))) { try { return createLong(numeric); } catch (NumberFormatException nfe) {,Nopol,44,patch1-Lang-44-Nopol2017-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Lang-44-Nopol2017-plausible.patch
215,Math,1,"if (sign >= 0) { // check if either value is close to a zero // neither value is close to zero and min and max do not bracket root. +                if(min <= 1) throw new IllegalArgumentException (""Function values at endpoints do not have different signs."" + ""  Endpoints: ["" + min + "","" + max + ""]"" +",Nopol,97,patch1-Math-97-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-97-Nopol2015-plausible.patch
217,Math,1,public double value(double x) { double r = f[0].value(x); for (int i = 1; i < f.length; i++) { +                    if ((0 < r) || (!(-1 <= r))) { r += f[i].value(x); } +                } return r; } };,Nopol,24,patch1-Math-24-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-24-Nopol2017-plausible.patch
219,Math,1,ratio         = y0[j] / scale[j]; yOnScale2    += ratio * ratio; ratio         = yDot0[j] / scale[j]; +      if ((scale.length) != (org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.this.maxStep)) { yDotOnScale2 += ratio * ratio; } +    }  double h = ((yOnScale2 < 1.0e-10) || (yDotOnScale2 < 1.0e-10)) ? 1.0e-6 : (0.01 * FastMath.sqrt(yOnScale2 / yDotOnScale2));,Nopol,39,patch1-Math-39-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-39-Nopol2017-plausible.patch
224,Lang,1,switch (lastChar) { case 'l' : case 'L' : -                    if (dec == null -                        && exp == null -                        && isDigits(numeric.substring(1)) -                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) { +                    if (((dec == null) && (exp == null))) { try { return createLong(numeric); } catch (NumberFormatException nfe) {,Nopol,58,patch1-Lang-58-Nopol2017-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Lang-58-Nopol2017-plausible.patch
227,Math,1,"break;  case 1 : // one eigenvalue just deflated. use dMin1, dN1 for dMin and dN. -            if (dMin1 == dN1 && dMin2 == dN2) { +            if (org.apache.commons.math.linear.EigenDecompositionImpl.this.main!=null) {  // cases 7 and 8. tType = -7;",Nopol,81,patch1-Math-81-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-81-Nopol2017-plausible.patch
228,Math,1,} } } +                if (minRatioPositions.isEmpty()) { return minRow; } +        } return minRatioPositions.get(0); } ,Nopol,28,patch1-Math-28-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-28-Nopol2017-plausible.patch
229,Time,1,*/ public boolean equals(Object partial) { // override to perform faster -        if (this == partial) { +        if (((this) == partial) || (!(org.joda.time.LocalDateTime.MONTH_OF_YEAR < org.joda.time.LocalDateTime.this.iLocalMillis))) { return true; } if (partial instanceof LocalDateTime) {,Nopol,12,patch1-Time-12-Nopol2017-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Time-12-Nopol2017-plausible.patch
230,Math,1,"ret = Double.NaN; } else if (x == 0.0) { ret = 0.0; -        } else if (a >= 1.0 && x > a) { +        } else if (((a == 1) || ((a >= 1.0) && (x > a))) && (org.apache.commons.math.special.Gamma.HALF_LOG_2_PI <= x)) { // use regularizedGammaQ because it should converge faster in this // case. ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);",Nopol,104,patch1-Math-104-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-104-Nopol2015-plausible.patch
233,Chart,1,"if (edge == null) { throw new IllegalArgumentException(""Null 'edge' argument.""); } +        if(-1 == org.jfree.chart.axis.AxisCollection.this.axesAtLeft.size()) if (edge == RectangleEdge.TOP) { this.axesAtTop.add(axis); }",Nopol,26,patch1-Chart-26-Nopol2015-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-26-Nopol2015-plausible.patch
237,Time,1,"long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) { FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear()); FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year)); +        if ((!(10 == monthOfYear)) && (((31) - (2)) != (dayOfMonth))) { FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear)); +        } return getYearMonthDayMillis(year, monthOfYear, dayOfMonth); } ",Nopol,18,patch1-Time-18-Nopol2017-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Time-18-Nopol2017-plausible.patch
238,Math,1,"Integer minPos = null; for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) { if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) { +                if((0) != (minValue)) minValue = tableau.getEntry(0, i); minPos = i; }",Nopol,82,patch1-Math-82-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-82-Nopol2015-plausible.patch
240,Math,1,"// Inverse quadratic interpolation gives a value // in the wrong direction, or progress is slow. // Fall back to bisection. +                    if(-1 <= delta) delta = 0.5 * dx; oldDelta = delta; } else {",Nopol,78,patch1-Math-78-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-78-Nopol2015-plausible.patch
243,Chart,1,"// if the plot area is too small, just return... boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW); boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW); -        if (b1 || b2) { +        if (org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE!=null) { return; } ",Nopol,26,patch1-Chart-26-Nopol2017-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-26-Nopol2017-plausible.patch
244,Chart,1,"w[2] = size.width; } h[3] = h[2]; +        if (null!=null) { if (this.rightBlock != null) { RectangleConstraint c4 = new RectangleConstraint(0.0, new Range(0.0, constraint.getWidth() - w[2]), Size2D size = this.rightBlock.arrange(g2, c4); w[3] = size.width; } +        } h[4] = h[2]; w[4] = constraint.getWidth() - w[3] - w[2]; RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);",Nopol,13,patch1-Chart-13-Nopol2017-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-13-Nopol2017-plausible.patch
246,Math,1, // x- if (!restrictToNonNegative) { +                        if((1) != (org.apache.commons.math.optimization.linear.SimplexTableau.this.numSlackVariables)) matrix[row][getSlackVariableOffset() - 1] = getInvertedCoeffiecientSum(constraint.getCoefficients()); },Nopol,87,patch1-Math-87-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-87-Nopol2015-plausible.patch
247,Time,1,"return values; } // month is largest field and being added to, such as month-day -        if (DateTimeUtils.isContiguous(partial)) { +        if ((!(((fieldIndex) != (1)) && (valueToAdd <= values.length))) || (valueToAdd < -1)) { long instant = 0L; for (int i = 0, isize = partial.size(); i < isize; i++) { instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);",Nopol,14,patch1-Time-14-Nopol2017-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Time-14-Nopol2017-plausible.patch
248,Chart,1,this.data.remove(0); removed = true; } -            if (removed) { +            if(org.jfree.data.time.TimeSeries.this.data!=null) { findBoundsByIteration(); if (notify) { fireSeriesChanged();,Nopol,3,patch1-Chart-3-Nopol2015-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Chart-3-Nopol2015-plausible.patch
249,Math,1,for (int i = 0; i < getNumArtificialVariables(); i++) { int col = i + getArtificialVariableOffset(); if (getBasicRow(col) == null) { +            if (1 <= org.apache.commons.math.optimization.linear.SimplexTableau.this.numSlackVariables) { columnsToDrop.add(col); } } +        }  double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()]; for (int i = 1; i < getHeight(); i++) {,Nopol,42,patch1-Math-42-Nopol2017-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-42-Nopol2017-plausible.patch
250,Math,1,"for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) { final double entry = tableau.getEntry(0, i); if (Precision.compareTo(entry, 0d, maxUlps) > 0) { +                if((org.apache.commons.math3.optimization.linear.SimplexTableau.NEGATIVE_VAR_COLUMN_LABEL.length()) != (org.apache.commons.math3.optimization.linear.SimplexTableau.this.numArtificialVariables)) columnsToDrop.add(i); } }",Nopol,33,patch1-Math-33-Nopol2015-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Math-33-Nopol2015-plausible.patch
251,Time,1,"}  if (tailZone != null) { -                if (tailZone.iStartRecurrence.getNameKey() -                    .equals(tailZone.iEndRecurrence.getNameKey())) { +                if (id.length()==0) { if (ZoneInfoCompiler.verbose()) { System.out.println(""Fixing duplicate recurrent name key - "" + tailZone.iStartRecurrence.getNameKey());",Nopol,11,patch1-Time-11-Nopol2017-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Time-11-Nopol2017-plausible.patch
253,Lang,1,(str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S'); } -                if (ch == 'Y') { +                if (str!=null) { return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');,Nopol,51,patch1-Lang-51-Nopol2015-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Lang-51-Nopol2015-plausible.patch
255,Time,1,return offsetLocal; } } -        } else if (offsetLocal > 0) { +        } else if (org.joda.time.DateTimeZone.this.iID!=null) { long prev = previousTransition(instantAdjusted); if (prev < instantAdjusted) { int offsetPrev = getOffset(prev);,Nopol,19,patch1-Time-19-Nopol2017-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/ICSE18/patch1-Time-19-Nopol2017-plausible.patch
387,Lang,1,case 'L' : -                    if (dec == null +                    if ((1) != (val.length())) { +                        if (dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) { -                        try { -                            return createLong(numeric); -                        } catch (NumberFormatException nfe) { -                            //Too big for a long +                            try { +                                return createLong(numeric); +                            } catch (NumberFormatException nfe) { +                                //Too big for a long +                            } +                            return createBigInteger(numeric); + } -                        return createBigInteger(numeric); - } ,Nopol,44,patch1-Lang-44-Nopol-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/Nopol/Lang/patch1-Lang-44-Nopol-plausible.patch
388,Lang,1,} -            stopTime = System.currentTimeMillis(); +            if (org.apache.commons.lang.time.StopWatch.this.stopTime < 10) { +                stopTime = System.currentTimeMillis(); +            } this.runningState = STATE_STOPPED; ,Nopol,55,patch1-Lang-55-Nopol-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/Nopol/Lang/patch1-Lang-55-Nopol-plausible.patch
389,Lang,1,"} -                    throw new NumberFormatException(str + "" is not a valid number.""); +                    if ((numeric.length()) != (short) 1) { +                        throw new NumberFormatException(str + "" is not a valid number.""); +                    } case 'f' : ",Nopol,58,patch1-Lang-58-Nopol-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/Nopol/Lang/patch1-Lang-58-Nopol-plausible.patch
390,Lang,1,// reset time -        if (date.getTime() != time) { -            date.setTime(time); -            val.setTime(date); +        if (seconds <= org.apache.commons.lang.time.DateUtils.fields.length) { +            if (date.getTime() != time) { +                date.setTime(time); +                val.setTime(date); +            } } ,Nopol,53,patch1-Lang-53-Nopol-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/Nopol/Lang/patch1-Lang-53-Nopol-plausible.patch
391,Lang,1,char ch = str.charAt(0); -                if (ch == 'y') { -                    return -                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') && -                        (str.charAt(2) == 's' || str.charAt(2) == 'S'); +                if (str!=null) { +                    return +                    (str.charAt(1) == 'e' || str.charAt(1) == 'E') && +                    (str.charAt(2) == 's' || str.charAt(2) == 'S'); } ,Nopol,51,patch1-Lang-51-Nopol-plausible.patch,Lang-overfit,patches_remove_inconsistent/overfitting/Nopol/Lang/patch1-Lang-51-Nopol-plausible.patch
392,Chart,1,"PlotOrientation orientation = plot.getOrientation(); -        if (orientation == PlotOrientation.HORIZONTAL) { -            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, -                    rangeAxis, statData, row, column); +        if (3 == 0) { +            if (orientation == PlotOrientation.HORIZONTAL) { +                drawHorizontalItem(g2, state, dataArea, plot, domainAxis, +                rangeAxis, statData, row, column); +            } +            else if (orientation == PlotOrientation.VERTICAL) { +                drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, +                statData, row, column); +            } } -        else if (orientation == PlotOrientation.VERTICAL) { -            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, -                    statData, row, column); -        } } ",Nopol,25,patch1-Chart-25-Nopol-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/Nopol/Chart/patch1-Chart-25-Nopol-plausible.patch
393,Chart,1,"if (end < start) { -            throw new IllegalArgumentException(""Requires start <= end.""); +            if (org.jfree.data.time.TimeSeries.DEFAULT_RANGE_DESCRIPTION.length() == org.jfree.data.time.TimeSeries.this.data.size()) { +                throw new IllegalArgumentException(""Requires start <= end.""); +            } } ",Nopol,9,patch1-Chart-9-Nopol-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/Nopol/Chart/patch1-Chart-9-Nopol-plausible.patch
394,Chart,1,"h[2] = constraint.getHeight() - h[1] - h[0]; -        if (this.leftBlock != null) { -            RectangleConstraint c3 = new RectangleConstraint(0.0, -                    new Range(0.0, constraint.getWidth()), -                    LengthConstraintType.RANGE, h[2], null, -                    LengthConstraintType.FIXED); -            Size2D size = this.leftBlock.arrange(g2, c3); -            w[2] = size.width; +        if (null!=null) { +            if (this.leftBlock != null) { +                RectangleConstraint c3 = new RectangleConstraint(0.0, +                new Range(0.0, constraint.getWidth()), +                LengthConstraintType.RANGE, h[2], null, +                LengthConstraintType.FIXED); +                Size2D size = this.leftBlock.arrange(g2, c3); +                w[2] = size.width; +            } } ",Nopol,13,patch1-Chart-13-Nopol-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/Nopol/Chart/patch1-Chart-13-Nopol-plausible.patch
395,Chart,1,if (!(this.lower == range.lower)) { -            return false; +            if ((org.jfree.data.Range.this.lower <= 0) || (29 < org.jfree.data.Range.this.upper)) { +                return false; +            } } ,Nopol,21,patch1-Chart-21-Nopol-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/Nopol/Chart/patch1-Chart-21-Nopol-plausible.patch
396,Chart,1,"// append the value to the list... -            if (this.autoSort) { +            if (overwritten!=null) { this.data.add(-index - 1, new XYDataItem(x, y)); ",Nopol,5,patch1-Chart-5-Nopol-plausible.patch,Chart-overfit,patches_remove_inconsistent/overfitting/Nopol/Chart/patch1-Chart-5-Nopol-plausible.patch
397,Math,1,for (int i = 0; i < j; i += 4) { -                for (int k = 0; k < 4; k += step) { -                    final double tmp = work[i + k]; -                    work[i + k] = work[j - k]; -                    work[j - k] = tmp; +                if (org.apache.commons.math.linear.EigenDecompositionImpl.this.cachedV!=null) { +                    for (int k = 0; k < 4; k += step) { +                        final double tmp = work[i + k]; +                        work[i + k] = work[j - k]; +                        work[j - k] = tmp; +                    } } ,Nopol,80,patch1-Math-80-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-80-Nopol-plausible.patch
398,Math,1,double oldFac = hsig ? 0 : ccov1 * cc * (2. - cc); -            oldFac += 1. - ccov1 - ccovmu; +            if (org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.inputSigma!=null) { +                oldFac += 1. - ccov1 - ccovmu; +            } if (isActiveCMA) { ,Nopol,20,patch1-Math-20-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-20-Nopol-plausible.patch
399,Math,1,if (!restrictToNonNegative) { -                        matrix[row][getSlackVariableOffset() - 1] = +                        if (org.apache.commons.math.optimization.linear.SimplexTableau.this.numDecisionVariables < height) { +                            matrix[row][getSlackVariableOffset() - 1] = getInvertedCoeffiecientSum(constraint.getCoefficients()); +                        } } ,Nopol,87,patch1-Math-87-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-87-Nopol-plausible.patch
400,Math,1,// compute the Newton correction -            for (int j = 0; j < solvedCols; ++j) { -                int pj = permutation[j]; -                work1[pj] = work3[pj] * diag[pj] / dxNorm; +            if (org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.this.orthoTolerance < gNorm) { +                for (int j = 0; j < solvedCols; ++j) { +                    int pj = permutation[j]; +                    work1[pj] = work3[pj] * diag[pj] / dxNorm; +                } } ,Nopol,58,patch1-Math-58-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-58-Nopol-plausible.patch
401,Math,1,gam = dN; -                        a2 = 0.0; +                        if (org.apache.commons.math.linear.EigenDecompositionImpl.this.cachedV!=null) { +                            a2 = 0.0; +                        } if (work[nn - 5]  >  work[nn - 7]) { ,Nopol,81,patch1-Math-81-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-81-Nopol-plausible.patch
402,Math,1,if (n == 0) { -            xbar = x; +            if (((!((x) != (1))) && (!((x) != (1)))) || (y < x)) { +                xbar = x; +            } ybar = y; ,Nopol,105,patch1-Math-105-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-105-Nopol-plausible.patch
403,Math,1,"protected void verifySequence(final double lower, final double initial, final double upper) { -        if (!isSequence(lower, initial, upper)) { +        if ((!(lower < initial)) || ((org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.this.result <= lower) && (1 == lower))) { throw MathRuntimeException.createIllegalArgumentException( -                    ""invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}"", -                    lower, initial, upper); +            ""invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}"", +            lower, initial, upper); } ",Nopol,73,patch1-Math-73-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-73-Nopol-plausible.patch
404,Math,1,if (getBasicRow(col) == null) { -            columnsToDrop.add(col); +            if (0 < org.apache.commons.math.optimization.linear.SimplexTableau.this.numSlackVariables) { +                columnsToDrop.add(col); +            } } ,Nopol,42,patch1-Math-42-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-42-Nopol-plausible.patch
405,Math,1,if (FastMath.abs(d) < 1.0e-10) { -            return null; +            if (((other.sin < 1) && (other.sin < 1)) || ((org.apache.commons.math3.geometry.euclidean.twod.Line.this.originOffset) != (d))) { +                return null; +            } } ,Nopol,4,patch1-Math-4-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-4-Nopol-plausible.patch
406,Math,1,!Double.isInfinite(uB[i])) { -                hasFiniteBounds = true; +                if (org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.checkFeasableCount == org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.iterations) { +                    hasFiniteBounds = true; +                } break; ,Nopol,18,patch1-Math-18-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-18-Nopol-plausible.patch
407,Math,1,} -            return xbarw + (correction/sumw); +            if (xbarw < length) { +                return xbarw + (correction/sumw); +            } } ,Nopol,41,patch1-Math-41-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-41-Nopol-plausible.patch
408,Math,1,"if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) { -                minValue = tableau.getEntry(0, i); +                if (org.apache.commons.math.optimization.linear.SimplexSolver.DEFAULT_EPSILON == minValue) { +                    minValue = tableau.getEntry(0, i); +                } minPos = i; ",Nopol,82,patch1-Math-82-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-82-Nopol-plausible.patch
409,Math,1,"entries.put(index, value); -        } else if (entries.containsKey(index)) { -            entries.remove(index); +        } else { +            if (org.apache.commons.math.linear.OpenMapRealVector.DEFAULT_ZERO_TOLERANCE == org.apache.commons.math.linear.OpenMapRealVector.this.epsilon) { +                if (entries.containsKey(index)) { +                    entries.remove(index); +                } +            } } ",Nopol,49,patch1-Math-49-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-49-Nopol-plausible.patch
410,Math,1,"for (final StepHandler handler : stepHandlers) { -                    handler.handleStep(interpolator, isLastStep); +                    if (org.apache.commons.math3.ode.AbstractIntegrator.this.stepHandlers.size() == orderingSign) { +                        handler.handleStep(interpolator, isLastStep); +                    } } ",Nopol,7,patch1-Math-7-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-7-Nopol-plausible.patch
411,Math,1,"if (Precision.compareTo(entry, 0d, maxUlps) > 0) { -                columnsToDrop.add(i); +                if ((2) != (org.apache.commons.math3.optimization.linear.SimplexTableau.this.numArtificialVariables)) { +                    columnsToDrop.add(i); +                } } ",Nopol,33,patch1-Math-33-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-33-Nopol-plausible.patch
412,Math,1,// Fall back to bisection. -                    delta = 0.5 * dx; +                    if (y0 < 1) { +                        delta = 0.5 * dx; +                    } oldDelta = delta; ,Nopol,78,patch1-Math-78-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-78-Nopol-plausible.patch
413,Math,1,tmp = mu + k * sigma; -            if (tmp < upper) { -                upper = ((int) Math.ceil(tmp)) - 1; +            if (sigma == lower) { +                if (tmp < upper) { +                    upper = ((int) Math.ceil(tmp)) - 1; +                } } ,Nopol,2,patch1-Math-2-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-2-Nopol-plausible.patch
414,Math,1,"RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars); -        for (int i = 0; i < nVars; i++) { -            for (int j = 0; j < i; j++) { -              double corr = correlation(matrix.getColumn(i), matrix.getColumn(j)); -              outMatrix.setEntry(i, j, corr); -              outMatrix.setEntry(j, i, corr); +        if ((nVars) != (2)) { +            for (int i = 0; i < nVars; i++) { +                for (int j = 0; j < i; j++) { +                    double corr = correlation(matrix.getColumn(i), matrix.getColumn(j)); +                    outMatrix.setEntry(i, j, corr); +                    outMatrix.setEntry(j, i, corr); +                } +                outMatrix.setEntry(i, i, 1d); } -            outMatrix.setEntry(i, i, 1d); } ",Nopol,69,patch1-Math-69-Nopol-plausible.patch,Math-overfit,patches_remove_inconsistent/overfitting/Nopol/Math/patch1-Math-69-Nopol-plausible.patch
415,Time,1,"// month is largest field and being added to, such as month-day -        if (DateTimeUtils.isContiguous(partial)) { +        if ((org.joda.time.chrono.BasicMonthOfYearDateTimeField.MIN <= fieldIndex) || ((!(1 == valueToAdd)) && ((valueToAdd) != (-1)))) { long instant = 0L; ",Nopol,14,patch1-Time-14-Nopol-plausible.patch,Time-overfit,patches_remove_inconsistent/overfitting/Nopol/Time/patch1-Time-14-Nopol-plausible.patch
704,Lang,0,switch (lastChar) { case 'l' : case 'L' : +                    if((val.length()) != (1)) if (dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {,Nopol,44,patch1-Lang-44-Nopol2015.patch,Lang-correct,patches_remove_inconsistent/correct/ICSE18/patch1-Lang-44-Nopol2015.patch
705,Chart,0,"// Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list... -            if (this.autoSort) { +            if (!(org.jfree.data.xy.XYSeries.this.allowDuplicateXValues)) { this.data.add(-index - 1, new XYDataItem(x, y)); } else {",Nopol,5,patch1-Chart-5-Nopol2015.patch,Chart-correct,patches_remove_inconsistent/correct/ICSE18/patch1-Chart-5-Nopol2015.patch
710,Lang,0,"return createBigInteger(numeric);  } +                    if(-1 < expPos) throw new NumberFormatException(str + "" is not a valid number.""); case 'f' : case 'F' :",Nopol,58,patch1-Lang-58-Nopol2015.patch,Lang-correct,patches_remove_inconsistent/correct/ICSE18/patch1-Lang-58-Nopol2015.patch
721,Math,0,"break; case REGULA_FALSI: // Nothing. +                    if(!((x == 1) || ((1 < x) && (inverted)))) if (x == x1) { x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol)); f0 = computeObjectiveValue(x0);",Nopol,50,patch1-Math-50-Nopol2015.patch,Math-correct,patches_remove_inconsistent/correct/ICSE18/patch1-Math-50-Nopol2015.patch
727,Lang,0,"if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { throw new IllegalStateException(""Stopwatch is not running. ""); } +            if(-1 == org.apache.commons.lang.time.StopWatch.this.stopTime) stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; }",Nopol,55,patch1-Lang-55-Nopol2015.patch,Lang-correct,patches_remove_inconsistent/correct/ICSE18/patch1-Lang-55-Nopol2015.patch
786,Lang,0,case '/' : -                            out.write('\\'); +                            if (escapeSingleQuote) { +                                out.write('\\'); +                            } out.write('/'); ,Nopol,46,patch1-Lang-46-Nopol.patch,Lang-correct,patches_remove_inconsistent/correct/Nopol/Lang/patch1-Lang-46-Nopol.patch
